
#include "Hideshots.h"
#include "..\..\Menu\config.h"

Hideshots g_Hideshots;

static float TicksToTime(int ticks) {

	return g_pGlobalVars->intervalPerTick * (float)(ticks);
}

void Hideshots::HideShots()
{
	static bool did_shift_before = false;
	static int double_tapped = 0;
	static int prev_shift_ticks = 0;
	static bool reset = false;

	m_tick_to_shift = 3;


	if (CanDT())
	{
		prev_shift_ticks = 0;

		auto can_shift_shot = CanFireWithExploit(c_config::get().ticks_to_shift);

		auto can_shot = CanFireWithExploit(fabsf(-1 - prev_shift_ticks));

		if (can_shift_shot || (!can_shot && !did_shift_before))
		{
			prev_shift_ticks = c_config::get().ticks_to_shift;
			double_tapped = 0;
		}

		else {
			double_tapped++;
			prev_shift_ticks = 0;
		}

		if (prev_shift_ticks > 0)
		{
			if (CanFireWithExploit(prev_shift_ticks))
			{
				if (Globals::pCmd->buttons & IN_ATTACK)
				{
					m_tick_to_shift = prev_shift_ticks;
					reset = true;
				}
				else {
					auto* weap = Globals::LocalPlayer->GetActiveWeapon();
					if ((!(Globals::pCmd->buttons & IN_ATTACK)) && reset
						&& fabsf(weap->GetLastShotTime() - TicksToTime(Globals::LocalPlayer->GetTickBase())) > 0.5f) {
						m_charged = false;
						m_tick_to_recharge = c_config::get().ticks_to_shift + 1;
						reset = false;
					}
				}
			}
		}
		did_shift_before = prev_shift_ticks != 0;
	}
}

bool Hideshots::CanFireWeapon(float curtime)
{
	if (!Globals::LocalPlayer)
		return false;

	if (!Globals::LocalPlayer->IsAlive())
		return false;

	C_BaseCombatWeapon* ActiveWeap = Globals::LocalPlayer->GetActiveWeapon();
	if (!ActiveWeap)
		return false;

	if (curtime >= ActiveWeap->GetNextPrimaryAttack())
		return true;

	return false;
}

bool Hideshots::CanFireWithExploit(int m_iShiftedTick)
{
	float curtime = TicksToTime(Globals::LocalPlayer->GetTickBase() - m_iShiftedTick);
	return CanFireWeapon(curtime);
}

bool Hideshots::CanDT()
{
	return Globals::LocalPlayer->IsAlive();
}

void Hideshots::start()
{
	if (Globals::LocalPlayer && Globals::LocalPlayer->IsAlive() && m_tick_to_recharge > 0 && !m_charged) {
		if (Globals::bSendPacket)
			m_tick_to_recharge--;
		if (m_tick_to_recharge == 0) {
			m_charged = true;
		}

		Globals::pCmd->tick_count = INT_MAX;

	}
}

void Hideshots::end()
{
	if (&c_config::get().hideshots && c_config::get().ticks_to_shift > 0)
		HideShots();
}